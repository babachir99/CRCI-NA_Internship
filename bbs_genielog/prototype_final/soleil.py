#Awa AMAR
#matrice pour le soleil

# définition fonction qui fait basculer d'une matrice à l'autre avec des effets d'animations 
def nbMatrice():
    return 2

#definition de la fonction soleil

def soleil(matrice):

  """
  >>> soleil(1)
  [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 6, 0, 0, 0, 0, 6, 0, 0, 0, 0, 6, 0, 0, 0], [0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0], [0, 6, 6, 0, 7, 7, 7, 7, 7, 7, 7, 0, 6, 6, 0, 0], [0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0], [0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
  """
  #modification des couleurs
  f = 6
  t = 7

  #matrice soleil

  soleil = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,f,0,0,0,0,0,0,0,0],
            [0,0,f,0,0,0,0,f,0,0,0,0,f,0,0,0],
            [0,0,0,f,0,0,0,0,0,0,0,f,0,0,0,0],
            [0,0,0,0,0,0,t,t,t,0,0,0,0,0,0,0],
            [0,0,0,0,0,t,t,t,t,t,0,0,0,0,0,0],
            [0,0,0,0,t,t,t,t,t,t,t,0,0,0,0,0],
            [0,f,f,0,t,t,t,t,t,t,t,0,f,f,0,0],
            [0,0,0,0,0,t,t,t,t,t,0,0,0,0,0,0],
            [0,0,0,0,0,0,t,t,t,0,0,0,0,0,0,0],
            [0,0,0,0,f,0,0,0,0,0,f,0,0,0,0,0],
            [0,0,0,f,0,0,0,f,0,0,0,f,0,0,0,0],
            [0,0,0,0,0,0,0,f,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]

  # ajout d'une deuxième matrice pour ajouter de l'animation en déplaçant les symboles "t" et "f".
  soleil2 =  [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
             [0,0,0,0,0,0,0,f,0,0,0,0,0,0,0,0],
             [0,f,0,0,0,0,0,f,0,0,0,0,0,f,0,0],
             [0,0,f,0,0,0,0,0,0,0,0,0,f,0,0,0],
             [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
             [0,0,0,0,0,0,t,t,t,0,0,0,0,0,0,0],
             [0,0,0,0,0,t,t,t,t,t,0,0,0,0,0,0],
             [0,0,0,0,t,t,t,t,t,t,t,0,0,0,0,0],
             [f,f,0,0,t,t,t,t,t,t,t,0,f,f,0,0],
             [0,0,0,0,0,t,t,t,t,t,0,0,0,0,0,0],
             [0,0,0,0,0,0,t,t,t,0,0,0,0,0,0,0],
             [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
             [0,0,0,f,0,0,0,0,0,0,0,f,0,0,0,0],
             [0,0,f,0,0,0,0,f,0,0,0,0,f,0,0,0],
             [0,0,0,0,0,0,0,f,0,0,0,0,0,0,0,0],
             [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]


  if (matrice == 1):
        return soleil
  elif (matrice == 2):
        return soleil2

if __name__ == "__main__":
    import doctest
    doctest.testmod()

